/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../routes/__root'
import { Route as SettingsImport } from './../routes/settings'
import { Route as ProjectImport } from './../routes/$project'
import { Route as IndexImport } from './../routes/index'
import { Route as ProjectEditorImport } from './../routes/$project.editor'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ProjectRoute = ProjectImport.update({
  id: '/$project',
  path: '/$project',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectEditorRoute = ProjectEditorImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => ProjectRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$project': {
      id: '/$project'
      path: '/$project'
      fullPath: '/$project'
      preLoaderRoute: typeof ProjectImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/$project/editor': {
      id: '/$project/editor'
      path: '/editor'
      fullPath: '/$project/editor'
      preLoaderRoute: typeof ProjectEditorImport
      parentRoute: typeof ProjectImport
    }
  }
}

// Create and export the route tree

interface ProjectRouteChildren {
  ProjectEditorRoute: typeof ProjectEditorRoute
}

const ProjectRouteChildren: ProjectRouteChildren = {
  ProjectEditorRoute: ProjectEditorRoute,
}

const ProjectRouteWithChildren =
  ProjectRoute._addFileChildren(ProjectRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$project': typeof ProjectRouteWithChildren
  '/settings': typeof SettingsRoute
  '/$project/editor': typeof ProjectEditorRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$project': typeof ProjectRouteWithChildren
  '/settings': typeof SettingsRoute
  '/$project/editor': typeof ProjectEditorRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$project': typeof ProjectRouteWithChildren
  '/settings': typeof SettingsRoute
  '/$project/editor': typeof ProjectEditorRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$project' | '/settings' | '/$project/editor'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$project' | '/settings' | '/$project/editor'
  id: '__root__' | '/' | '/$project' | '/settings' | '/$project/editor'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectRoute: typeof ProjectRouteWithChildren
  SettingsRoute: typeof SettingsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectRoute: ProjectRouteWithChildren,
  SettingsRoute: SettingsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$project",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$project": {
      "filePath": "$project.tsx",
      "children": [
        "/$project/editor"
      ]
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/$project/editor": {
      "filePath": "$project.editor.tsx",
      "parent": "/$project"
    }
  }
}
ROUTE_MANIFEST_END */
